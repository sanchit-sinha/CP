<snippet>
	<content><![CDATA[
struct FenwickTree {
	vector<long long> bit;  // binary 1-indexed tree
	int n;

	FenwickTree(int n) {
		this->n = n;
		bit.assign(n + 1, 0ll) ;
	}

	FenwickTree(vector<long long> a) : FenwickTree(a.size()) { // a : 1 - indexed
		for (size_t i = 1; i < a.size(); i++)
			update(i, a[i]);
	}

	void update(int x , ll increment) {
		while (x <= n) {
			bit[x] += increment; // update operation
			x += (x & -x);
		}
	}

	ll query(int x) { // 1 .. x
		ll val = 0ll; // operation (inf , -inf , 0 ...)
		while (x > 0) {
			val += bit[x]; // operation
			x -= (x & -x);
		}
		return val;
	}

	ll query(int l, int r) { // l .. r
		return query(r) - query(l - 1);
	}
};

ll inversions( vll &v) {
	ll n = sz(v);

	ll mx = 0ll;
	for (auto &x : v) mx = max(mx, x);

	FenwickTree fT(mx + 3);

	ll inv = 0ll;
	rep(i, n) {
		inv += fT.query(v[i] + 1, mx);
		fT.update(v[i], 1);
	}

	return inv;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>inversions</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
